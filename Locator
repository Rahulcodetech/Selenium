
Web Element 
	Id				        driver.findElement(By.id()).click();	
	Link				      driver.findElement(By.link()).click();
	Partial Link			driver.findElement(By.partiallink()).click();
	Name				      driver.findElement(By.name()).click();
	Tag Name			    driver.findElement(By.tagename()).click();
	Class Name			  driver.findElement(By.className()).click();
	CSS Selector			driver.findElement(By.cssSelector()).click();
	xPath				      driver.finfElement(By.xPath()).clcick();
	Absolute xPath 		//tagName[@Attribute='Value']
	Relative xPath		//tagName[@Attribute='Value']
	Start With 
	    Static xPath		  //tagName[Start-with(@Attribute,'value')]
	    Dynamic xPath		  //tagName[Contains(@Attribute,'value')]
	Text Method			  //tagName[text()='Actualtext']
	And  & Or 			  //tagName[@Attribute='value' and @Attribute='value']
	        				  //tagName[@Attribute='value' or @Attribute='value']
	Parent self Child

Some Good Examples:


++link: Features
1. //a[text()='Features']
2. //a[contains(text(),'Features')] --recommended


Xpath 
++button:
//button[@type='button' and @class='btn']
//button[contains(text(),'Sign Up')]
//div[@class='dropdown']//button[@type='button' and @class='btn btn-secondary dropdown-toggle' and @id='dropdownMenuButton']
//button[@id='dropdownMenuButton']

++preceding-sibling:
//a[text()='test2 test2']//parent::td[@class='datalistrow']//preceding-sibling::td[@class='datalistrow']//input

++parent & preceding-sibling:

//a[text()='test2 test2']//parent::td[@class='datalistrow']//preceding-sibling::td[@class='datalistrow']//input[@name='contact_id']
======================================================
